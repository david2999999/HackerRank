Question
    You are working at the cash counter at a fun-fair, and you have different types of coins available to you in infinite quantities. The value of each coin is already given.
    Can you determine the number of ways of making change for a particular number of units using the given types of coins?

    Function Description
        Complete the getWays function in the editor below. It must return an integer denoting the number of ways to make change.

        getWays has the following parameter(s):
            - n: an integer, the amount to make change for
            - c: an array of integers representing available denominations

Thoughts Before Coding
    - We will first implement the recursive approach
        - In each of the recursive call
            - We will have up to 'k' choices, where k is the number of different coins
            - We can use a coin if it is smaller than or equal to current target amount
        - When the target amount reaches 0
            - We have found 1 way

Answer
    - Implement the recursive approach
        - What parameters do we need?
            - n, the current target amount
            - c, the input list of coins
        - What is the base case?
            - If 'n' is equal to 0
                - return 1
        - In each of the recursive call
            - Create a variable 'ways'
            - Iterate through the coins inside 'c', denoted as 'coin'
                - If 'coin' is greater than 'n'
                    - continue to next iteration
                - Recursively find the number of ways if we use this coin
                    - n => n - coin
                - Increment 'ways' by the recursive result
            - Return 'ways'